
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.domain.Orders" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="receiverAddress" property="receiveraddress" jdbcType="VARCHAR" />
    <result column="receiverName" property="receivername" jdbcType="VARCHAR" />
    <result column="receiverPhone" property="receiverphone" jdbcType="VARCHAR" />
    <result column="paystate" property="paystate" jdbcType="INTEGER" />
    <result column="ordertime" property="ordertime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, money, receiverAddress, receiverName, receiverPhone, paystate, ordertime, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.domain.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from orders
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.domain.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.domain.Orders" >
    insert into orders (id, money, receiverAddress, 
      receiverName, receiverPhone, paystate, 
      ordertime, user_id)
    values (#{id,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, #{receiveraddress,jdbcType=VARCHAR}, 
      #{receivername,jdbcType=VARCHAR}, #{receiverphone,jdbcType=VARCHAR}, #{paystate,jdbcType=INTEGER}, 
      #{ordertime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.domain.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="receiveraddress != null" >
        receiverAddress,
      </if>
      <if test="receivername != null" >
        receiverName,
      </if>
      <if test="receiverphone != null" >
        receiverPhone,
      </if>
      <if test="paystate != null" >
        paystate,
      </if>
      <if test="ordertime != null" >
        ordertime,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="receiveraddress != null" >
        #{receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="receivername != null" >
        #{receivername,jdbcType=VARCHAR},
      </if>
      <if test="receiverphone != null" >
        #{receiverphone,jdbcType=VARCHAR},
      </if>
      <if test="paystate != null" >
        #{paystate,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.domain.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.receiveraddress != null" >
        receiverAddress = #{record.receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receivername != null" >
        receiverName = #{record.receivername,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverphone != null" >
        receiverPhone = #{record.receiverphone,jdbcType=VARCHAR},
      </if>
      <if test="record.paystate != null" >
        paystate = #{record.paystate,jdbcType=INTEGER},
      </if>
      <if test="record.ordertime != null" >
        ordertime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set id = #{record.id,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      receiverAddress = #{record.receiveraddress,jdbcType=VARCHAR},
      receiverName = #{record.receivername,jdbcType=VARCHAR},
      receiverPhone = #{record.receiverphone,jdbcType=VARCHAR},
      paystate = #{record.paystate,jdbcType=INTEGER},
      ordertime = #{record.ordertime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.domain.Orders" >
    update orders
    <set >
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="receiveraddress != null" >
        receiverAddress = #{receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="receivername != null" >
        receiverName = #{receivername,jdbcType=VARCHAR},
      </if>
      <if test="receiverphone != null" >
        receiverPhone = #{receiverphone,jdbcType=VARCHAR},
      </if>
      <if test="paystate != null" >
        paystate = #{paystate,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        ordertime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.domain.Orders" >
    update orders
    set money = #{money,jdbcType=DOUBLE},
      receiverAddress = #{receiveraddress,jdbcType=VARCHAR},
      receiverName = #{receivername,jdbcType=VARCHAR},
      receiverPhone = #{receiverphone,jdbcType=VARCHAR},
      paystate = #{paystate,jdbcType=INTEGER},
      ordertime = #{ordertime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <insert id="addOder" parameterType="com.domain.Orders" >
    insert into orders (id, money, receiverAddress,
    receiverName, receiverPhone, paystate,
    ordertime, user_id)
    values (#{id,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, #{receiveraddress,jdbcType=VARCHAR},
    #{receivername,jdbcType=VARCHAR}, #{receiverphone,jdbcType=VARCHAR}, #{paystate,jdbcType=INTEGER},
    #{ordertime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER})
  </insert>

  <select id="findOrdersByUserId" parameterType="int" resultType="com.domain.Orders">
    SELECT * FROM orders
    WHERE user_id = #{id}
  </select>

  <select id="findOrderByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteOrder" parameterType="java.lang.String" >
    delete from orders
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <update id="modifyOrderPaystate" >
    UPDATE orders
    SET patstate = #{paystate}
    WHERE id = #{orderId}
  </update>
</mapper>